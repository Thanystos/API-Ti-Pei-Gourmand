# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false

    Symfony\Component\HttpFoundation\Request: ~

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    App\Controller\UserController:
        tags: ['controller.service_arguments']

    App\Controller\ImageController:
        tags: ['controller.service_arguments']

    App\Controller\UserRoleController:
        tags: ['controller.service_arguments']

    App\Controller\RoleController:
        tags: ['controller.service_arguments']

    # --------------------------------------------------------------------

    App\Service\EntityCreatorService:
        arguments:
            $entityManager: '@doctrine.orm.default_entity_manager'
            $serializer: '@serializer'
            $validator: '@validator'
            $passwordHasher: '@security.password_hasher'

    App\Service\EntityUpdaterService:
        arguments:
            $entityManager: '@doctrine.orm.default_entity_manager'
            $serializer: '@serializer'
            $passwordHasher: '@security.password_hasher'
            $security: '@security.helper'
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'